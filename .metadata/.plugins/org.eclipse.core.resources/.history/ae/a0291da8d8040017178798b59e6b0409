package harrypotter.model.tournament;

import harrypotter.model.character.Champion;

import java.awt.Point;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;


public class FirstTask extends Task {
	//An array list of Points containing the cells marked by the dragon to attack once the currentChamp makes his move.
	private ArrayList<Point> markedCells;
	
	//An array list containing the winners of this task who are thus qualified for the second task.
	private ArrayList<Champion> winners;
	
	public FirstTask(ArrayList<Champion> champions) throws IOException{
		super(shuffleHelper(champions));
		
	}
	
	//helper that shuffles the champions.
	private static ArrayList<Champion> shuffleHelper(ArrayList<Champion> champions){
		Collections.shuffle(champions);
		return champions;
	}
	
	public void generateMap(){
		super.addplayers();
		super.task1();
				
	}
	
	public ArrayList<Point> getMarkedCells(){
		return this.markedCells;
	}
	
	public void setMarkedCells(ArrayList<Point> markedCells){
		this.markedCells=markedCells;
	}
	public ArrayList<Champion> getWinners(){
		return this.winners;
	}
	
	public void setWinners(ArrayList<Champion> winners){
		this.winners=winners;
	}
	
	

}
