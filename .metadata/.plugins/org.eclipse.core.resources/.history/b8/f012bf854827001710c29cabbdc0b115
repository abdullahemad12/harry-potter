package harrypotter.controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import harrypotter.model.character.GryffindorWizard;
import harrypotter.model.character.HufflepuffWizard;
import harrypotter.model.character.RavenclawWizard;
import harrypotter.model.character.Wizard;
import harrypotter.model.magic.*;
import harrypotter.model.tournament.Task;
import harrypotter.model.tournament.Tournament;
import harrypotter.view.*;

public class Task1GUI implements ActionListener {
	
	private Tournament tournament;
	private TaskView taskview;
	
	public Task1GUI(Tournament tournament)
	{
		this.tournament = tournament;
		taskview = new Task1view();
	}

	public void UpdateCurrentChamp(Task task)
	{
		// sets all the champions information 
		
		Wizard currentChamp = (Wizard)task.getCurrentChamp();
		
		
		taskview.setChampName(currentChamp.getName());
		// sets the Wizard class
		if(currentChamp instanceof GryffindorWizard)
		{
			taskview.setWizClass("Gryffindor Wizard");
		}
		else if(currrent instanceof HufflepuffWizard)
		{
			taskview.setWizClass("Hufflepuff Wizard");
		}
		else  if(((Wizard)(tournament.getFirstTask().getCurrentChamp())) instanceof RavenclawWizard)
		{
			taskview.setWizClass("Ravenclaw Wizard");
		}
		else
		{
			taskview.setWizClass("Slytherin Wizard");
		}
		
		//sets ip, hp, traitactivated, remaining moves
		Task1view.setIp(((Wizard)(tournament.getFirstTask().getCurrentChamp())).getIp());
		Task1view.setHp(((Wizard)(tournament.getFirstTask().getCurrentChamp())).getHp());
		Task1view.setTraitActivated(tournament.getFirstTask().isTraitActivated());	
		Task1view.setRemainingMoves(tournament.getFirstTask().getAllowedMoves());
		Wizard wizard = tournament.getFirstTask().get
		ArrayList<Spell> spells = 
		for(Spell spell : spells)
		{
			
		}
		
	}
	
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	
	

}
