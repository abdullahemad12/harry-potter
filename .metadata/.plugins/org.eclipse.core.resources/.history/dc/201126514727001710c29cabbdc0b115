package harrypotter.controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import harrypotter.model.character.GryffindorWizard;
import harrypotter.model.character.HufflepuffWizard;
import harrypotter.model.character.RavenclawWizard;
import harrypotter.model.character.Wizard;
import harrypotter.model.magic.*;
import harrypotter.model.tournament.Tournament;
import harrypotter.view.*;

public class Task1GUI implements ActionListener {
	
	private Tournament tournament;
	private Task1view Task1view;
	
	public Task1GUI(Tournament tournament)
	{
		this.tournament = tournament;
		Task1view = new Task1view();
		
		
		
		
		
		Task1view.setVisible(true);
	
	}

	public void UpdateCurrentChamp()
	{
		// sets all the champions information 
		
				Task1view.setChampName(((Wizard)(tournament.getFirstTask().getCurrentChamp())).getName());
				// sets the Wizard class
				if(((Wizard)(tournament.getFirstTask().getCurrentChamp())) instanceof GryffindorWizard)
				{
					Task1view.setWizClass("Gryffindor Wizard");
				}
				else if(((Wizard)(tournament.getFirstTask().getCurrentChamp())) instanceof HufflepuffWizard)
				{
					Task1view.setWizClass("Hufflepuff Wizard");
				}
				else  if(((Wizard)(tournament.getFirstTask().getCurrentChamp())) instanceof RavenclawWizard)
				{
					Task1view.setWizClass("Ravenclaw Wizard");
				}
				else
				{
					Task1view.setWizClass("Slytherin Wizard");
				}
				
				//sets ip, hp, traitactivated, remaining moves
				Task1view.setIp(((Wizard)(tournament.getFirstTask().getCurrentChamp())).getIp());
				Task1view.setHp(((Wizard)(tournament.getFirstTask().getCurrentChamp())).getHp());
				Task1view.setTraitActivated(tournament.getFirstTask().isTraitActivated());
				
				Task1view.setRemainingMoves(tournament.getFirstTask().getAllowedMoves());
				
			
		
	}
	
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	
	

}
