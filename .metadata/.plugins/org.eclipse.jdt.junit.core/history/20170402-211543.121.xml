<?xml version="1.0" encoding="UTF-8"?><testrun name="M3PublicTests" project="harrypotter" tests="83" started="83" failures="21" errors="14" ignored="0">
  <testsuite name="harrypotter.tests.M3PublicTests" time="0.157">
    <testcase name="testSlytherinMovesToWallCellOnTraitActivated" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problem: 
	Unreachable catch block for InvalidTargetCellException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.onSlythMovesToInvalidCellsHelper(M3PublicTests.java:4874)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToWallCellOnTraitActivated(M3PublicTests.java:3980)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testRelocatingObstacleToCupThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testUseOnSlytherinWhileInCoolDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use his/her trait while he/she is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;9&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnSlytherinWhileInCoolDownThirdTask(M3PublicTests.java:4359)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRelocatingPotionSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use a relocating spell on CollectibleCell, an exception of type InvalidTargetCellException should be thrown &#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at harrypotter.tests.M3PublicTests.relocateInvalidTarget(M3PublicTests.java:4930)&#13;
	at harrypotter.tests.M3PublicTests.testRelocatingPotionSecondTask(M3PublicTests.java:3731)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInCooldownExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingChampionToWallThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionReqIPGetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testCastingDamagingSpellWithNotEnoughIPInFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In FirstTask, when the current champion casts a damaging spell on a Champion cell while not having enough IP, NotEnoughIPException should be thrown with the correct "remainingIP"  expected:&lt;100&gt; but was:&lt;50&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastingDamagingSpellWithNotEnoughIPInFirstTask(M3PublicTests.java:423)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveOutOfBordersFromCornerSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problem: 
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.testMoveOutOfBordersFromCornerSecondTask(M3PublicTests.java:1918)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testRelocatingObstacleOutOfRangeSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problems: 
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.testRelocatingObstacleOutOfRangeSecondTask(M3PublicTests.java:3135)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testSlytherinMovesToTreasureCellOnTraitActivated" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problem: 
	Unreachable catch block for InvalidTargetCellException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.onSlythMovesToInvalidCellsHelper(M3PublicTests.java:4874)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToTreasureCellOnTraitActivated(M3PublicTests.java:3935)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testInCooldownExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInvalidActionExceptionAbstract" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testDamagingCupCellThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionReqIPSetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfBordersExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingChampionToCollectibleSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testSlytherinMovesToCellOutOfBordersOnTraitActivatedSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problems: 
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.SlytherinMovesToCellOutOfBordersOnTraitActivatedHelper(M3PublicTests.java:5139)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToCellOutOfBordersOnTraitActivatedSecondTask(M3PublicTests.java:3864)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testRelocatingObstacleToChampionSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.015"/>
    <testcase name="testRelocatingChampionToObstacleFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.016"/>
    <testcase name="testConstructorInitializationInCooldownException" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In InCooldownException class, the variable remainingTurns is not set correctly in the constructor expected:&lt;6&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at harrypotter.tests.M3PublicTests.testConstructorInitializationInCooldownException(M3PublicTests.java:847)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testUseOnHufflepuffWhileInCoolDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In ThirdTask, The Hufflepuff trait should be always activated and should never throw an InCooldownException. harrypotter.exceptions.InCooldownException: Cannot make a move Yet. remaining Turns: -1&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnHufflepuffWhileInCoolDownThirdTask(M3PublicTests.java:4213)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRelocatingObstacleToObstacleFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.017"/>
    <testcase name="testInvalidActionExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testCastingRelocatingSpellWithNotEnoughIPInFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In the First Task, when the current champion casts a Relocating spell while not having enough IP, NotEnoughIPException should be thrown with the correct "remainingIP"  expected:&lt;80&gt; but was:&lt;20&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastingRelocatingSpellWithNotEnoughIPInFirstTask(M3PublicTests.java:706)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testOutOfRangeExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveRightToObstacleCell" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.ClassCastException: harrypotter.model.world.PhysicalObstacle cannot be cast to harrypotter.model.world.Merperson&#13;
	at harrypotter.model.tournament.SecondTask.encounterMerPerson(SecondTask.java:48)&#13;
	at harrypotter.model.tournament.Task.finalizeAction(Task.java:514)&#13;
	at harrypotter.model.tournament.SecondTask.moveRight(SecondTask.java:347)&#13;
	at harrypotter.tests.M3PublicTests.testMoveRightToObstacleCell(M3PublicTests.java:2073)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testMoveLeftToObstacleCell" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.ClassCastException: harrypotter.model.world.PhysicalObstacle cannot be cast to harrypotter.model.world.Merperson&#13;
	at harrypotter.model.tournament.SecondTask.encounterMerPerson(SecondTask.java:100)&#13;
	at harrypotter.model.tournament.Task.finalizeAction(Task.java:514)&#13;
	at harrypotter.model.tournament.SecondTask.moveLeft(SecondTask.java:303)&#13;
	at harrypotter.tests.M3PublicTests.testMoveLeftToObstacleCell(M3PublicTests.java:1735)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testRelocatingTreasureCellSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use a relocating spell on TreasureCell, an exception of type InvalidTargetCellException should be thrown &#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at harrypotter.tests.M3PublicTests.relocateInvalidTarget(M3PublicTests.java:4930)&#13;
	at harrypotter.tests.M3PublicTests.testRelocatingTreasureCellSecondTask(M3PublicTests.java:3815)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingSpellWhileCoolingDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use a spell while it is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;4&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastDamagingSpellWhileCoolingDownThirdTask(M3PublicTests.java:126)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructorInitializationInvalidTargetCellException" classname="harrypotter.tests.M3PublicTests" time="0.015"/>
    <testcase name="testInvalidTargetCellExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfBordersExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testUseOnHufflepuffWhileInCoolDownFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use his/her trait while he/she is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;2&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnHufflepuffWhileInCoolDownFirstTask(M3PublicTests.java:4142)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testOutOfBordersExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveBackwardToIncorrectTreasureCell" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In the Second Task, when the current champion tries to Move Backward to a Treasure cell that doesn't have the current champion's treasure, InvalidTargetCell Exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.testMoveBackwardToIncorrectTreasureCell(M3PublicTests.java:1422)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveLeftToWallCell" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testConstructorInitializationNotEnoughIPException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughResourcesExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInvalidActionExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingEmptyCellThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use a relocating spell on EmptyCell, an exception of type InvalidTargetCellException should be thrown &#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at harrypotter.tests.M3PublicTests.relocateInvalidTarget(M3PublicTests.java:4930)&#13;
	at harrypotter.tests.M3PublicTests.testRelocatingEmptyCellThirdTask(M3PublicTests.java:2946)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testNotEnoughIPExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfRangeExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testUseOnGryffindorTraitWhileInCoolDownSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.016">
      <failure>java.lang.AssertionError: If a champion tries to use his/her trait while he/she is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;2&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnGryffindorTraitWhileInCoolDownSecondTask(M3PublicTests.java:4067)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="tesInvalidTargetCellExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingChampionOutOfRangeFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problems: 
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfRangeException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.testRelocatingChampionOutOfRangeFirstTask(M3PublicTests.java:2433)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testCastRelocationSpellWhileCoolingDownFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use a spell while it is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;4&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastRelocationSpellWhileCoolingDownFirstTask(M3PublicTests.java:821)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastRelocatingSpellOnTargetOutOfBordersThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problems: 
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.castRelocatingSpellOnTargetOutOfBordersHelper(M3PublicTests.java:4560)&#13;
	at harrypotter.tests.M3PublicTests.testCastRelocatingSpellOnTargetOutOfBordersThirdTask(M3PublicTests.java:729)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testCastingHealingSpellWithEnoughIP" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInvalidTargetCellExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughResourcesExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionInstanceVariables1" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: requiredIP instance variable in class harrypotter.exceptions.NotEnoughIPException should not be accessed outside that class expected:&lt;2&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testInstanceVariablesArePrivate(M3PublicTests.java:5341)&#13;
	at harrypotter.tests.M3PublicTests.testNotEnoughIPExceptionInstanceVariables1(M3PublicTests.java:2156)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testNotEnoughIPExceptionInstanceVariables2" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: remainingIP instance variable in class harrypotter.exceptions.NotEnoughIPException should not be accessed outside that class expected:&lt;2&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testInstanceVariablesArePrivate(M3PublicTests.java:5341)&#13;
	at harrypotter.tests.M3PublicTests.testNotEnoughIPExceptionInstanceVariables2(M3PublicTests.java:2164)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRelocatingObstacleToCollectibleThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.015"/>
    <testcase name="testInvalidActionExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testDamagingPotionFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.016"/>
    <testcase name="testCastHealingSpellWhileCoolingDownSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use a spell while it is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;4&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastHealingSpellWhileCoolingDownSecondTask(M3PublicTests.java:216)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveBackwardToWallCell" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveBackwardToChampionCell" classname="harrypotter.tests.M3PublicTests" time="0.016">
      <failure>java.lang.AssertionError: In the Second Task, when a champion tries to Move Backward to a Champion cell, InvalidTargetCell Exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.testMoveBackwardToChampionCell(M3PublicTests.java:1336)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testNotEnoughResourcesExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveForwardToChampionCell" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In the Second Task, when a champion tries to Move Forward to a Champion cell, InvalidTargetCell Exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.testMoveForwardToChampionCell(M3PublicTests.java:1562)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testUseOnRavenclawWhileInCoolDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use his/her trait while he/she is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;6&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnRavenclawWhileInCoolDownThirdTask(M3PublicTests.java:4284)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testNotEnoughIPExceptionRemIPGetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInCooldownExceptionRemTurnsGetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInCooldownExceptionInstanceVariables1" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfRangeExceptionAllowedRangeGetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionRemIPSetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testConstructorInitializationOutOfRangeException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingChampionOutOfBordersThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problem: 
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.testRelocatingChampionOutOfBordersThirdTask(M3PublicTests.java:2365)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testCastingHealingSpellWithNotEnoughIPInThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In ThirdTask, when the current champion casts a Healing spell while not having enough IP, NotEnoughIPException should be thrown with the correct "remainingIP"  expected:&lt;1&gt; but was:&lt;299&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastingHealingSpellWithNotEnoughIPInThirdTask(M3PublicTests.java:634)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInCooldownExceptionRemTurnsSetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfRangeExceptionAllowedRangeSetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testDamagingWallThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.016"/>
    <testcase name="testNotEnoughResourcesExceptionAbstract" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfRangeExceptionInstanceVariables1" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveOutOfBordersFromEdgeFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.ArrayIndexOutOfBoundsException: -1&#13;
	at harrypotter.model.tournament.FirstTask.moveForward(FirstTask.java:156)&#13;
	at harrypotter.tests.M3PublicTests.testMoveOutOfBordersFromEdgeFirstTask(M3PublicTests.java:1967)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testConstructorInitializationOutOfBordersException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingObstacleOutOfBordersThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problem: 
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.testRelocatingObstacleOutOfBordersThirdTask(M3PublicTests.java:3065)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testMoveForwardToIncorrectTreasureCell" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In the Second Task, when the current champion tries to Move Forward to a Treasure cell that doesn't have the current champion's treasure, InvalidTargetCell Exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.testMoveForwardToIncorrectTreasureCell(M3PublicTests.java:1646)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastDamagingSpellOutOfBordersFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problems: 
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
	Unreachable catch block for OutOfBordersException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.castDamagingSpellOutOfBordersHelper(M3PublicTests.java:4403)&#13;
	at harrypotter.tests.M3PublicTests.testCastDamagingSpellOutOfBordersFirstTask(M3PublicTests.java:42)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testCastingDamagingSpellWithEnoughIP" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testSlytherinMovesToCupCellOnTraitActivated" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>java.lang.Error: Unresolved compilation problem: 
	Unreachable catch block for InvalidTargetCellException. This exception is never thrown from the try statement body
&#13;
	at harrypotter.tests.M3PublicTests.onSlythMovesToInvalidCellsHelper(M3PublicTests.java:4874)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToCupCellOnTraitActivated(M3PublicTests.java:3893)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
