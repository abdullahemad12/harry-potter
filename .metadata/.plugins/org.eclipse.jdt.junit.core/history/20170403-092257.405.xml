<?xml version="1.0" encoding="UTF-8"?><testrun name="M3PublicTests" project="harrypotter" tests="83" started="83" failures="14" errors="3" ignored="0">
  <testsuite name="harrypotter.tests.M3PublicTests" time="0.203">
    <testcase name="testSlytherinMovesToWallCellOnTraitActivated" classname="harrypotter.tests.M3PublicTests" time="0.002">
      <failure>java.lang.AssertionError: In the ThirdTask, when slytherin trait is activated in the BACKWARD direction, and the target cell is WallCell, InvalidTargetCell Exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.onSlythMovesToInvalidCellsHelper(M3PublicTests.java:530)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToWallCellOnTraitActivated(M3PublicTests.java:5219)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRelocatingObstacleToCupThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testUseOnSlytherinWhileInCoolDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: If a champion tries to use his/her trait while he/she is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;9&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnSlytherinWhileInCoolDownThirdTask(M3PublicTests.java:5593)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRelocatingPotionSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInCooldownExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingChampionToWallThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionReqIPGetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testCastingDamagingSpellWithNotEnoughIPInFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In FirstTask, when the current champion casts a damaging spell on a Champion cell while not having enough IP, NotEnoughIPException should be thrown with the correct "remainingIP"  expected:&lt;100&gt; but was:&lt;50&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastingDamagingSpellWithNotEnoughIPInFirstTask(M3PublicTests.java:1301)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveOutOfBordersFromCornerSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <error>harrypotter.exceptions.InvalidTargetCellException: You are Trying to Move to an Invalid Target Cell&#13;
	at harrypotter.model.tournament.SecondTask.moveRight(SecondTask.java:352)&#13;
	at harrypotter.tests.M3PublicTests.testMoveOutOfBordersFromCornerSecondTask(M3PublicTests.java:2972)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testRelocatingObstacleOutOfRangeSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testSlytherinMovesToTreasureCellOnTraitActivated" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In the SecondTask, when slytherin trait is activated in the FORWARD direction, and the target cell is TreasureCell, InvalidTargetCell Exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.onSlythMovesToInvalidCellsHelper(M3PublicTests.java:530)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToTreasureCellOnTraitActivated(M3PublicTests.java:5169)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInCooldownExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInvalidActionExceptionAbstract" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testDamagingCupCellThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionReqIPSetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfBordersExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingChampionToCollectibleSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testSlytherinMovesToCellOutOfBordersOnTraitActivatedSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In the class harrypotter.model.tournament.SecondTask, when slytherin trait is activated in the Backward direction, and the target cell is out of the borders, OutOfBordersException should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.SlytherinMovesToCellOutOfBordersOnTraitActivatedHelper(M3PublicTests.java:827)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToCellOutOfBordersOnTraitActivatedSecondTask(M3PublicTests.java:5098)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRelocatingObstacleToChampionSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingChampionToObstacleFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testConstructorInitializationInCooldownException" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In InCooldownException class, the variable remainingTurns is not set correctly in the constructor expected:&lt;5&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at harrypotter.tests.M3PublicTests.testConstructorInitializationInCooldownException(M3PublicTests.java:1773)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testUseOnHufflepuffWhileInCoolDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In ThirdTask, The Hufflepuff trait should be always activated and should never throw an InCooldownException. harrypotter.exceptions.InCooldownException: Cannot make a move Yet. remaining Turns: -1&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnHufflepuffWhileInCoolDownThirdTask(M3PublicTests.java:5447)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRelocatingObstacleToObstacleFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInvalidActionExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testCastingRelocatingSpellWithNotEnoughIPInFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.0">
      <failure>java.lang.AssertionError: In the First Task, when the current champion casts a Relocating spell while not having enough IP, NotEnoughIPException should be thrown with the correct "remainingIP"  expected:&lt;80&gt; but was:&lt;20&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastingRelocatingSpellWithNotEnoughIPInFirstTask(M3PublicTests.java:1584)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testOutOfRangeExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveRightToObstacleCell" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveLeftToObstacleCell" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingTreasureCellSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.016"/>
    <testcase name="testCastDamagingSpellWhileCoolingDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.002">
      <failure>java.lang.AssertionError: If a champion tries to use a spell while it is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;5&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastDamagingSpellWhileCoolingDownThirdTask(M3PublicTests.java:1004)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testConstructorInitializationInvalidTargetCellException" classname="harrypotter.tests.M3PublicTests" time="0.002"/>
    <testcase name="testInvalidTargetCellExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testOutOfBordersExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testUseOnHufflepuffWhileInCoolDownFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.003">
      <failure>java.lang.AssertionError: If a champion tries to use his/her trait while he/she is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;2&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnHufflepuffWhileInCoolDownFirstTask(M3PublicTests.java:5376)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testOutOfBordersExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveBackwardToIncorrectTreasureCell" classname="harrypotter.tests.M3PublicTests" time="0.002"/>
    <testcase name="testMoveLeftToWallCell" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testNotEnoughIPExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testConstructorInitializationNotEnoughIPException" classname="harrypotter.tests.M3PublicTests" time="0.002"/>
    <testcase name="testNotEnoughResourcesExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testInvalidActionExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingEmptyCellThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.02"/>
    <testcase name="testNotEnoughIPExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testOutOfRangeExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testUseOnGryffindorTraitWhileInCoolDownSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.001">
      <error>harrypotter.exceptions.InvalidTargetCellException: You are Trying to Move to an Invalid Target Cell&#13;
	at harrypotter.model.tournament.SecondTask.moveBackward(SecondTask.java:263)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnGryffindorTraitWhileInCoolDownSecondTask(M3PublicTests.java:5278)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="tesInvalidTargetCellExceptionExtendsException" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testRelocatingChampionOutOfRangeFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.02"/>
    <testcase name="testCastRelocationSpellWhileCoolingDownFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.002">
      <failure>java.lang.AssertionError: If a champion tries to use a spell while it is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;5&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastRelocationSpellWhileCoolingDownFirstTask(M3PublicTests.java:1699)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCastRelocatingSpellOnTargetOutOfBordersThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.005"/>
    <testcase name="testCastingHealingSpellWithEnoughIP" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testInvalidTargetCellExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testNotEnoughResourcesExceptionConstructorExists" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionInstanceVariables1" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testNotEnoughIPExceptionInstanceVariables2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testRelocatingObstacleToCollectibleThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.019"/>
    <testcase name="testInvalidActionExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testDamagingPotionFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.009"/>
    <testcase name="testCastHealingSpellWhileCoolingDownSecondTask" classname="harrypotter.tests.M3PublicTests" time="0.002">
      <error>harrypotter.exceptions.InvalidTargetCellException: You are Trying to Move to an Invalid Target Cell&#13;
	at harrypotter.model.tournament.SecondTask.moveRight(SecondTask.java:352)&#13;
	at harrypotter.tests.M3PublicTests.testCastHealingSpellWhileCoolingDownSecondTask(M3PublicTests.java:1073)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testMoveBackwardToWallCell" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testMoveBackwardToChampionCell" classname="harrypotter.tests.M3PublicTests" time="0.002"/>
    <testcase name="testNotEnoughResourcesExceptionConstructorExists2" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testMoveForwardToChampionCell" classname="harrypotter.tests.M3PublicTests" time="0.002"/>
    <testcase name="testUseOnRavenclawWhileInCoolDownThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.001">
      <failure>java.lang.AssertionError: If a champion tries to use his/her trait while he/she is still in coolDown, an exception of type InCooldownException should be thrown with the correct "remainingTurns"  expected:&lt;6&gt; but was:&lt;0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testUseOnRavenclawWhileInCoolDownThirdTask(M3PublicTests.java:5518)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testNotEnoughIPExceptionRemIPGetter" classname="harrypotter.tests.M3PublicTests" time="0.002"/>
    <testcase name="testInCooldownExceptionRemTurnsGetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testInCooldownExceptionInstanceVariables1" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testOutOfRangeExceptionAllowedRangeGetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testNotEnoughIPExceptionRemIPSetter" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testConstructorInitializationOutOfRangeException" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testRelocatingChampionOutOfBordersThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.016"/>
    <testcase name="testCastingHealingSpellWithNotEnoughIPInThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.011">
      <failure>java.lang.AssertionError: In ThirdTask, when the current champion casts a Healing spell while not having enough IP, NotEnoughIPException should be thrown with the correct "remainingIP"  expected:&lt;1&gt; but was:&lt;299&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:743)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at harrypotter.tests.M3PublicTests.testCastingHealingSpellWithNotEnoughIPInThirdTask(M3PublicTests.java:1512)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testInCooldownExceptionRemTurnsSetter" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testOutOfRangeExceptionAllowedRangeSetter" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testDamagingWallThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.017"/>
    <testcase name="testNotEnoughResourcesExceptionAbstract" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testOutOfRangeExceptionInstanceVariables1" classname="harrypotter.tests.M3PublicTests" time="0.0"/>
    <testcase name="testMoveOutOfBordersFromEdgeFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.002"/>
    <testcase name="testConstructorInitializationOutOfBordersException" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testRelocatingObstacleOutOfBordersThirdTask" classname="harrypotter.tests.M3PublicTests" time="0.015"/>
    <testcase name="testMoveForwardToIncorrectTreasureCell" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testCastDamagingSpellOutOfBordersFirstTask" classname="harrypotter.tests.M3PublicTests" time="0.004"/>
    <testcase name="testCastingDamagingSpellWithEnoughIP" classname="harrypotter.tests.M3PublicTests" time="0.001"/>
    <testcase name="testSlytherinMovesToCupCellOnTraitActivated" classname="harrypotter.tests.M3PublicTests" time="0.001">
      <failure>java.lang.AssertionError: In the ThirdTask, when slytherin trait is activated in the FORWARD direction, and the target cell is CupCell, InvalidTargetCell Exception should be thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at harrypotter.tests.M3PublicTests.onSlythMovesToInvalidCellsHelper(M3PublicTests.java:530)&#13;
	at harrypotter.tests.M3PublicTests.testSlytherinMovesToCupCellOnTraitActivated(M3PublicTests.java:5127)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:483)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
